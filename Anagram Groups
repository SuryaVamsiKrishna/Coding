# Given an array of strings strs, group all anagrams together into sublists. You may return the output in any order.

# An anagram is a string that contains the exact same characters as another string, but the order of the characters can be different.

# Example 1:
# Input: strs = ["act","pots","tops","cat","stop","hat"]

# Output: [["hat"],["act", "cat"],["stop", "pots", "tops"]]





class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        Map<String, List<String>> result = new HashMap<>();
        for(int i=0; i<strs.length; i++){
            char[] temp = strs[i].toCharArray();
            int[] count = new int[26];
            Arrays.fill(count, 0);
            for(int j=0; j<temp.length; j++){
                count[((int) temp[j]) - 97]++;
            }
            String key = Arrays.toString(count);
            result.putIfAbsent(key, new ArrayList());
            result.get(key).add(strs[i]);
        }
        return new ArrayList<>(result.values());
    }
}
